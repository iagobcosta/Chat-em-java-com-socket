package com.app.frame;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.print.attribute.standard.DateTimeAtProcessing;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;

import com.app.bean.ChatMessage;
import com.app.bean.ChatMessage.Action;
import com.app.service.ClienteService;

/**
 *
 * @author iago
 */
public class ClienteFrame extends javax.swing.JFrame {

	private Socket socket;
	private ChatMessage message;
	private ClienteService service;
	

	/**
	 * Creates new form ClienteFrame
	 */
	public ClienteFrame() {
		initComponents();
	}

	private class ListenerSocket implements Runnable {

		private ObjectInputStream input;

		public ListenerSocket(Socket socket) {
			try {
				input = new ObjectInputStream(socket.getInputStream());
			} catch (IOException ex) {
				Logger.getLogger(ClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
			}
		}

		@Override
		public void run() {
			try {
				ChatMessage massage = null;

				while ((message = (ChatMessage) input.readObject()) != null) {
					Action action = message.getAction();
					if (action.equals(Action.CONNECT)) {
						connected(message);
					} else if (action.equals(Action.DISCONNECT)) {
						disconnected();
						socket.close();
					} else if (action.equals(Action.SEND_USER)) {
						receive(message);
					} else if (action.equals(Action.USERS_ONLINE)) {
						refreshOnlines(message);
					} else if (action.equals(Action.RENAME)) {

					}
				}
			} catch (IOException ex) {
				Logger.getLogger(ClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
			} catch (ClassNotFoundException ex) {
				Logger.getLogger(ClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
			}
		}

	}

	private void connected(ChatMessage message) {
		if (message.getText().equals("NO")) {
			txtName.setText("");
			JOptionPane.showMessageDialog(this, "Nome de usu�rio j� em uso tente outro nome!");
			return;
		}

		this.message = message;
		btnConectar.setEnabled(false);
		txtName.setEnabled(false);

		btnSair.setEnabled(true);
		txtAreaSend.setEnabled(true);
		btnEnviar.setEnabled(true);
		btnLimpar.setEnabled(true);
		txtAreaReceive.setEnabled(true);
		JOptionPane.showMessageDialog(this, "Você esta conectado no chat");
	}

	private void disconnected() {

		btnConectar.setEnabled(true);
		txtName.setEnabled(true);

		btnSair.setEnabled(false);
		txtAreaSend.setEnabled(false);
		btnEnviar.setEnabled(false);
		btnLimpar.setEnabled(false);
		txtAreaReceive.setEnabled(false);
		txtAreaReceive.setText("");
		txtAreaSend.setText("");

		JOptionPane.showMessageDialog(this, "Voc� saiu do chat");

	}

	private void receive(ChatMessage message) {
		if (message.getIp() == null) {
			txtAreaReceive.append(message.getNome() + " " + message.getText() + "\n");
		} else {
			txtAreaReceive.append(message.getIp() + ": " + message.getPorta() + "/~" + message.getNome() + ":  "
					+ message.getText() + " " + message.getHora() + " " + message.getData() + "\n");
		}
	}

	private void refreshOnlines(ChatMessage message) {
		Set<String> names = message.getSetOnlines();

		names.remove(message.getNome());

		String[] array = names.toArray(new String[names.size()]);

		lstOnlines.setListData(array);
		lstOnlines.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		lstOnlines.setLayoutOrientation(JList.VERTICAL);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel2 = new javax.swing.JPanel();
		jScrollPane3 = new javax.swing.JScrollPane();
		lstOnlines = new javax.swing.JList();
		jPanel3 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		txtAreaReceive = new javax.swing.JTextArea();
		jScrollPane2 = new javax.swing.JScrollPane();
		txtAreaSend = new javax.swing.JTextArea();
		btnEnviar = new javax.swing.JButton();
		btnLimpar = new javax.swing.JButton();
		jPanel1 = new javax.swing.JPanel();
		txtName = new javax.swing.JTextField();
		btnConectar = new javax.swing.JButton();
		btnSair = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Online"));

		jScrollPane3.setViewportView(lstOnlines);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane3));

		jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		txtAreaReceive.setEditable(false);
		txtAreaReceive.setColumns(20);
		txtAreaReceive.setRows(5);
		txtAreaReceive.setEnabled(false);
		jScrollPane1.setViewportView(txtAreaReceive);

		txtAreaSend.setColumns(20);
		txtAreaSend.setRows(5);
		txtAreaSend.setEnabled(false);
		jScrollPane2.setViewportView(txtAreaSend);

		btnEnviar.setText("Enviar");
		btnEnviar.setEnabled(false);
		btnEnviar.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnEnviarActionPerformed(evt);
			}
		});

		btnLimpar.setText("Limpar");
		btnLimpar.setEnabled(false);
		btnLimpar.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnLimparActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1)
						.addGroup(jPanel3Layout.createSequentialGroup()
								.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(btnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(btnLimpar)))
						.addContainerGap()));
		jPanel3Layout
				.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel3Layout.createSequentialGroup().addContainerGap()
								.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
								.addGap(18, 18, 18)
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(jPanel3Layout.createSequentialGroup()
												.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addContainerGap())
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
												jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(btnEnviar).addComponent(btnLimpar))
														.addGap(39, 39, 39)))));

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Conectar"));

		btnConectar.setText("Conectar");
		btnConectar.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnConectarActionPerformed(evt);
			}
		});

		btnSair.setText("Sair");
		btnSair.setEnabled(false);
		btnSair.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSairActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnConectar)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnSair)
						.addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(btnConectar).addComponent(btnSair)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
						.addGroup(layout.createSequentialGroup().addContainerGap()
								.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
				.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.PREFERRED_SIZE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE)
				.addGroup(layout.createSequentialGroup()
						.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 4, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnConectarActionPerformed
		String name = txtName.getText();
		message = new ChatMessage();
		if (!name.isEmpty()) {

			message.setAction(Action.CONNECT);
			message.setNome(name);

			service = new ClienteService();
			socket = service.connect();
			message.setIp(service.getIp());

			new Thread(new ListenerSocket(socket)).start();

			service.send(message);
		}
	}// GEN-LAST:event_btnConectarActionPerformed

	private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSairActionPerformed
		ChatMessage message = new ChatMessage();
		message.setNome((this.txtName.getText()));
		message.setAction(Action.DISCONNECT);
		service.send(message);
		disconnected();

	}// GEN-LAST:event_btnSairActionPerformed

	

	private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnEnviarActionPerformed
		String text = txtAreaSend.getText();

		String name = txtName.getText();

		message = new ChatMessage();

		if (lstOnlines.getSelectedIndex() > -1) {
			message.setNameReserved((String) lstOnlines.getSelectedValue());
			message.setAction(Action.SEND_USER);
			lstOnlines.clearSelection();
		} else {
			message.setAction(Action.SEND_ALL);
		}

		if (!text.isEmpty()) {

			message.setNome(name);
			message.setText(text);
			message.setIp(service.getIp());
			message.setPorta(service.getPorta());

			SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
			Date hora = Calendar.getInstance().getTime(); // Ou qualquer outra forma que tem
			String horaFormatada = sdf.format(hora);
			message.setHora(horaFormatada);

			SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
			Date data = new Date();
			String dataFormatada = formato.format(data);
			message.setData(dataFormatada);

			txtAreaReceive.append("Voc� disse: " + text + "\n");

			service.send(message);

		}

		txtAreaSend.setText("");
	}
	// GEN-LAST:event_btnEnviarActionPerformed

	private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLimparActionPerformed
		txtAreaSend.setText("");
	}// GEN-LAST:event_btnLimparActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnConectar;
	private javax.swing.JButton btnEnviar;
	private javax.swing.JButton btnLimpar;
	private javax.swing.JButton btnSair;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JList lstOnlines;
	private javax.swing.JTextArea txtAreaReceive;
	private javax.swing.JTextArea txtAreaSend;
	private javax.swing.JTextField txtName;

	// End of variables declaration//GEN-END:variables
}
